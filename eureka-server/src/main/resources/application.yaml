spring:
  application:
    name: eureka-server
server:
  port: 8761
eureka:
  client:
    register-with-eureka: false # не хотим регистрироваться на Eureka Server
    fetch-registry: false # не хотим получать информацию реестра от Eureka Server
    eureka-server-connect-timeout-seconds: 60 # время ожидания (1 минута) до истечения тайм-аута соединения с Eureka Server
    eureka-service-url-poll-interval-seconds: 15 # каждые 15 секунд запрашивать изменения об информации с сервера
    use-dns-for-fetching-service-urls: false # запретите dns и укажите явный маршрут к серверам eureka (serviceUrl)
    service-url:
      default-zone: https://${eureka.instance.hostname}:${server.port}/eureka/
    prefer-same-zone-eureka: true # использовать сервер eureka в той же зоне
    healthcheck:
      enabled: true # для клиента включим healthcheck
  server:
    expected-client-renewal-interval-seconds: 30 # время, по которому сервер будет ожидать эхо запрос от клиента о том что он жив (по умолчанию 30 секунд)
    renewal-percent-threshold: 0.85 # Eureka Server будет считать микросервис работающим, если 85% или более из зарегистрированных микросервисов отправляют регулярные обновления
    enable-self-preservation: true # режим самосохранения
  instance:
#    Если вы хотите подключиться по HTTPS
    secure-port-enabled: true
    non-secure-port-enabled: false
    hostname: my-eureka-server.com
    metadata-map:
      zone: zone_A
    lease-renewal-interval-in-seconds: 20 # установить время, которое сервер будет ждать эхо запрос от клиента о том что он жив (20 секунд)
    lease-expiration-duration-in-seconds: 70 # Если Eureka Server не видел обновления в течение 70 секунд, он удаляет экземпляр из своего реестра